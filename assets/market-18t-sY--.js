import{n as t,A as e,o as r,E as a}from"./common-DKlJKmQc.js";const o="marketHistoryCache.v1";async function s(a,o=null,s=null,n=null){const i=new URLSearchParams({type_id:a});o&&i.append("region_id",o),s&&i.append("location_id",s),null!==n&&i.append("is_buy_order",n);try{const s=19000001;if(o&&Number(o)!==s)try{const e=await t(o);if(e&&e.best_quotes&&e.best_quotes[a]){const t=e.best_quotes[a],r=t.best_buy?[{...t.best_buy,is_buy_order:!0,type_id:a,region_id:o}]:[];return{buyOrders:r,sellOrders:t.best_sell?[{...t.best_sell,is_buy_order:!1,type_id:a,region_id:o}]:[],meta:{source:"snapshot",last_updated:e.last_updated}}}}catch{}const n=`${e}/market/orders?${i}`,c=await r(n,{},1);if(!c||"object"!=typeof c)throw new Error("Invalid response structure from Azure");return{buyOrders:c.buyOrders||[],sellOrders:c.sellOrders||[],meta:c.meta||{}}}catch(c){return{buyOrders:[],sellOrders:[],meta:{source:"none"}}}}async function n(t,e,r=365){const s=`${t}:${e}`,n=function(){try{const t=localStorage.getItem(o);return t?JSON.parse(t):{}}catch{return{}}}(),i=Date.now(),c=n[s];if(c&&Array.isArray(c.data)){if(new Date(c.lastUpdated).toDateString()===new Date(i).toDateString())return c.data}const u=`${a}/markets/${e}/history/?type_id=${encodeURIComponent(t)}`;try{const t=await fetch(u,{headers:{"User-Agent":"EVE-Data-Site"}});if(!t.ok)throw new Error(`Failed to fetch market history: ${t.statusText} (${t.status})`);return function(t,e,r,a,s){const n=(Array.isArray(s)?s:[]).filter(t=>t&&t.date).sort((t,e)=>new Date(t.date)-new Date(e.date)).slice(-365);let i=n;if(a&&Array.isArray(a.data)&&a.data.length){const t=new Map(a.data.map(t=>[t.date,t]));for(const e of n)t.set(e.date,e);i=Array.from(t.values()).sort((t,e)=>new Date(t.date)-new Date(e.date)).slice(-365)}return r[t]={lastUpdated:e,data:i},function(t){try{localStorage.setItem(o,JSON.stringify(t))}catch{}}(r),i}(s,i,n,c,await t.json())}catch(l){if(c&&Array.isArray(c.data))return c.data;throw l}}async function i(t){const e=await Promise.all([10000002,10000043,10000032,10000030,10000042].map(async e=>{try{const r=await n(t,e);return r&&r.length,r}catch(r){return[]}})),r=new Map;e.forEach((t,e)=>{Array.isArray(t)&&t.forEach(t=>{const e=t.date;r.has(e)||r.set(e,{date:e,totalVolume:0,totalValue:0,highest:0,lowest:1/0,orderCount:0});const a=r.get(e),o=t.volume||0,s=t.average||0;a.totalVolume+=o,a.totalValue+=o*s,a.highest=Math.max(a.highest,t.highest||0),a.lowest=Math.min(a.lowest,t.lowest||a.lowest),a.orderCount+=t.order_count||0})});const a=Array.from(r.values()).map(t=>({date:t.date,average:t.totalVolume>0?t.totalValue/t.totalVolume:0,totalVolume:t.totalVolume,highest:t.highest,lowest:t.lowest===1/0?0:t.lowest,order_count:t.orderCount})).sort((t,e)=>new Date(t.date)-new Date(e.date));return a.length,a}async function c(e,r=null){return async function(e,r){const a=Number(e),o=Number(r||e);try{const[e,r]=await Promise.all([t(a),t(o)]);if(!(e&&r&&e.best_quotes&&r.best_quotes))return[];const s=[],n=Object.keys(e.best_quotes);for(const t of n){const n=e.best_quotes[t],i=r.best_quotes[t];if(!n||!i)continue;const c=n.best_sell,u=i.best_buy;if(!c||!u)continue;const l=(u.price||0)-(c.price||0);if(l<=0)continue;const d=Math.min(Number(c.volume_remain||0),Number(u.volume_remain||0)),_=c.price>0?l/c.price*100:0;s.push({type_id:Number(t),origin_id:c.location_id,destination_id:u.location_id,sell_price:c.price,buy_price:u.price,profit_per_unit:l,profit_margin:_,max_volume:d,origin_region_id:a,destination_region_id:o,_fallback:!0})}return s.sort((t,e)=>(e.profit_per_unit||0)-(t.profit_per_unit||0)).slice(0,5e3)}catch{return[]}}(e,r||e)}export{n as a,s as b,c,i as f};
